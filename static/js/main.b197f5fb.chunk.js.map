{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPHABET","sort","a","b","LENGTH","length","reverse","handleClassName","target","element","buttons","document","querySelector","Array","from","children","forEach","button","classList","add","remove","App","useState","NONE","setSortType","setIsReversed","className","type","onClick","e","currentTarget","map","good","Date","now","Math","random","ReactDOM","render","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASK,SAASC,EACdC,EAAiBC,EAAoBC,GAErC,IAAMC,EAAY,YAAOH,GA0BzB,OAxBIC,IAAaJ,EAASO,UACxBD,EAAaE,MAAK,SAACC,EAAGC,GACpB,OAAID,EAAIC,EACC,EAGLD,EAAIC,GACE,EAGH,CACR,IAGCN,IAAaJ,EAASW,QACxBL,EAAaE,MAAK,SAACC,EAAGC,GACpB,OAAOD,EAAEG,OAASF,EAAEE,MACrB,IAGCP,GACFC,EAAaO,UAGRP,CACR,E,SApCIN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAsCL,IAAMc,EAAkB,SAACC,GACvB,IAAMC,EAAUD,EACVE,EAAUC,SAASC,cAAc,YAEnCF,GACFG,MAAMC,KAAN,OAAWJ,QAAX,IAAWA,OAAX,EAAWA,EAASK,UAAUC,SAAQ,SAAAC,GACpCA,EAAOC,UAAUC,IAAI,WACtB,IAGHV,EAAQS,UAAUE,OAAO,WAC1B,EAEYC,EAAgB,WAC3B,MAAgCC,mBAAS7B,EAAS8B,MAAlD,mBAAO1B,EAAP,KAAiB2B,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOxB,EAAP,KAAmB2B,EAAnB,KAEA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAU,0BACVE,QAAS,SAACC,GACRtB,EAAgBsB,EAAEC,eAClBN,EAAY/B,EAASO,SACtB,EANH,iCAWA,wBACE2B,KAAK,SACLD,UAAU,6BACVE,QAAS,SAACC,GACRtB,EAAgBsB,EAAEC,eAClBN,EAAY/B,EAASW,OACtB,EANH,4BAWA,wBACEuB,KAAK,SACLD,UAAU,6BACVE,QAAS,SAACC,GACRtB,EAAgBsB,EAAEC,eAClBL,GAAc,EACf,EANH,sBAWE5B,IAAaJ,EAAS8B,MAAQzB,IAC9B,wBACE6B,KAAK,SACLD,UAAU,4BACVE,QAAS,SAACC,GACRtB,EAAgBsB,EAAEC,eAClBL,GAAc,GACdD,EAAY/B,EAAS8B,KACtB,EAPH,sBAeJ,6BACE,6BACG5B,EAAkBD,EAAiBG,EAAUC,GAC3CiC,KAAI,SAACC,GACJ,OACE,oBAAI,UAAQ,OAAZ,SAAqDA,GAA7BC,KAAKC,MAAQC,KAAKC,SAE7C,UAKZ,ECrIDC,IAASC,OACP,cAAC,EAAD,IACA3B,SAAS4B,eAAe,Q","file":"static/js/main.b197f5fb.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport function getReorderedGoods(\n  goods: string[], sortType: SortType, isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort((a, b) => {\n      if (a > b) {\n        return 1;\n      }\n\n      if (a < b) {\n        return -1;\n      }\n\n      return 0;\n    });\n  }\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((a, b) => {\n      return a.length - b.length;\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nconst handleClassName = (target: Element) => {\n  const element = target as HTMLButtonElement;\n  const buttons = document.querySelector('.buttons');\n\n  if (buttons) {\n    Array.from(buttons?.children).forEach(button => {\n      button.classList.add('is-light');\n    });\n  }\n\n  element.classList.remove('is-light');\n};\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className=\"button is-info is-light\"\n          onClick={(e) => {\n            handleClassName(e.currentTarget);\n            setSortType(SortType.ALPHABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button is-success is-light\"\n          onClick={(e) => {\n            handleClassName(e.currentTarget);\n            setSortType(SortType.LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button is-warning is-light\"\n          onClick={(e) => {\n            handleClassName(e.currentTarget);\n            setIsReversed(true);\n          }}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={(e) => {\n              handleClassName(e.currentTarget);\n              setIsReversed(false);\n              setSortType(SortType.NONE);\n            }}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        <ul>\n          {getReorderedGoods(goodsFromServer, sortType, isReversed)\n            .map((good) => {\n              return (\n                <li data-cy=\"Good\" key={Date.now() + Math.random()}>{good}</li>\n              );\n            })}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}