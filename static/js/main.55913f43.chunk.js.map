{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPHABET","sort","a","b","LENGTH","length","reverse","App","useState","NONE","setSortType","setIsReversed","className","type","onClick","value","map","good","Math","random","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASK,SAASC,EACdC,EAAiBC,EAAoBC,GAErC,IAAMC,EAAY,YAAOH,GA0BzB,OAxBIC,IAAaJ,EAASO,UACxBD,EAAaE,MAAK,SAACC,EAAGC,GACpB,OAAID,EAAIC,EACC,EAGLD,EAAIC,GACE,EAGH,CACR,IAGCN,IAAaJ,EAASW,QACxBL,EAAaE,MAAK,SAACC,EAAGC,GACpB,OAAOD,EAAEG,OAASF,EAAEE,MACrB,IAGCP,GACFC,EAAaO,UAGRP,CACR,E,SApCIN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAsCE,IAAMc,EAAgB,WAC3B,MAAgCC,mBAASf,EAASgB,MAAlD,mBAAOZ,EAAP,KAAiBa,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOV,EAAP,KAAmBa,EAAnB,KAEA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEf,IAAaJ,EAASO,SAClB,iBACA,0BAENc,QAAS,WACPJ,EAAYjB,EAASO,SACtB,EATH,iCAcA,wBACEa,KAAK,SACLD,UACEf,IAAaJ,EAASW,OAClB,oBACA,6BAENU,QAAS,WACPJ,EAAYjB,EAASW,OACtB,EATH,4BAcA,wBACES,KAAK,SACLD,UACEd,EACI,oBACA,6BAENgB,QAAS,WACPH,GAAc,SAAAI,GAAK,OAAKA,CAAL,GACpB,EATH,sBAcElB,IAAaJ,EAASgB,MAAQX,IAC9B,wBACEe,KAAK,SACLD,UAAU,4BACVE,QAAS,WACPH,GAAc,GACdD,EAAYjB,EAASgB,KACtB,EANH,sBAcJ,6BACE,6BACGd,EAAkBD,EAAiBG,EAAUC,GAC3CkB,KAAI,SAACC,GACJ,OACE,oBAAI,UAAQ,OAAZ,SACGA,GADqBC,KAAKC,SAAWD,KAAKC,SAIhD,UAKZ,EClIDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,Q","file":"static/js/main.55913f43.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport function getReorderedGoods(\n  goods: string[], sortType: SortType, isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort((a, b) => {\n      if (a > b) {\n        return 1;\n      }\n\n      if (a < b) {\n        return -1;\n      }\n\n      return 0;\n    });\n  }\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((a, b) => {\n      return a.length - b.length;\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            sortType === SortType.ALPHABET\n              ? 'button is-info'\n              : 'button is-info is-light'\n          }\n          onClick={() => {\n            setSortType(SortType.ALPHABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            sortType === SortType.LENGTH\n              ? 'button is-success'\n              : 'button is-success is-light'\n          }\n          onClick={() => {\n            setSortType(SortType.LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            isReversed\n              ? 'button is-warning'\n              : 'button is-warning is-light'\n          }\n          onClick={() => {\n            setIsReversed(value => !value);\n          }}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setIsReversed(false);\n              setSortType(SortType.NONE);\n            }}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        <ul>\n          {getReorderedGoods(goodsFromServer, sortType, isReversed)\n            .map((good) => {\n              return (\n                <li data-cy=\"Good\" key={Math.random() + Math.random()}>\n                  {good}\n                </li>\n              );\n            })}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}